'Clinical outcome only',
'Both',
'Neither'))
# convert to long dataframe
plot_long_df_pca <- zv_fw_base_yr1_df_wide %>%
select(c(bw_id, ends_with('groups'))) %>%
pivot_longer(cols = ends_with('groups'),
names_to = 'cols_compared',
values_to = 'agreement_group') %>%
mutate(clinical_outcome = ifelse(grepl("t25fw_cont", cols_compared),
'T25FW Continuous',
ifelse(grepl("t25fw_cat", cols_compared),
'T25FW Categorical',
ifelse(grepl('edss_cont', cols_compared),
'EDSS Ordinal',
ifelse(grepl('edss_cat', cols_compared),
'EDSS Categorical',
'Other'))))) %>%   # add column for outcome
mutate(video_metric = ifelse(grepl('pixel_cont', cols_compared),
'Pixel Proxy Continuous',
ifelse(grepl('pixel_cat', cols_compared),
'Pixel Proxy Categorical',
ifelse(grepl('stride_cont', cols_compared),
'Stride Time Continuous',
ifelse(grepl('stride_cat', cols_compared),
'Stride Time Categorical',
ifelse(grepl('either_vid_cont', cols_compared),
'Either Video Continuous',
ifelse(grepl('either_vid_cat', cols_compared),
'Either Video Categorical',
ifelse(grepl('pc1', cols_compared),
'PC1',
'Other')))))))) # add column for video metric
View(plot_long_df_pca)
# factor: agreement_group
plot_long_df_pca$agreement_group <- factor(plot_long_df_pca$agreement_group,
levels = c('Video Only',
'Clinical Only',
'Both',
'Neither'),
labels = c('Video metric only',
'Clinical outcome only',
'Both',
'Neither'))
# Plot all
ggplot(data = plot_long_df_pca, aes(x = video_metric, fill = agreement_group)) +
geom_bar(position = 'fill') +
facet_grid(rows = vars(clinical_outcome)) +
scale_fill_brewer(name = 'Worsened by:', palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(legend.position = 'bottom',
axis.text.x = element_text(angle = 90),
strip.text.y.right = element_text(angle = 0))
plot_long_df_pca_2 <- plot_long_df_pca %>%
filter(!grepl(paste(exclude_strings, collapse="|"), cols_compared)) %>%
filter(!grepl('either', cols_compared)) # comparison of either video
# cont vs cat comparisons
exclude_strings_pca <- c('edss_cont_vs_pixel_cat_groups',
'edss_cont_vs_stride_cat_groups',
"t25fw_cont_vs_pixel_cat_groups",
't25fw_cont_vs_stride_cat_groups'
)
plot_long_df_pca_2 <- plot_long_df_pca %>%
filter(!grepl(paste(exclude_strings_pca, collapse="|"), cols_compared)) %>%
filter(!grepl('either', cols_compared)) # comparison of either video
View(plot_long_df_pca_2)
table(plot_long_df_pca_2$cols_compared)
# add proportion column to put text on plot
plot_long_df_pca_2 <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
# cont vs cat comparisons
exclude_strings_pca <- c('edss_cont_vs_pixel_cat_groups',
'edss_cont_vs_stride_cat_groups',
"t25fw_cont_vs_pixel_cat_groups",
't25fw_cont_vs_stride_cat_groups'
)
plot_long_df_pca_2 <- plot_long_df_pca %>%
filter(!grepl(paste(exclude_strings_pca, collapse="|"), cols_compared)) %>%
filter(!grepl('either', cols_compared)) # comparison of either video
table(plot_long_df_pca_2$cols_compared)
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
View(stride_time_srd_df)
View(plot_long_df_pca_prop)
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
# cont vs cat comparisons
exclude_strings_pca <- c('edss_cat_vs_pixel_cont_groups',
'edss_cat_vs_stride_cont_groups',
"t25fw_cat_vs_pixel_cont_groups",
't25fw_cat_vs_stride_cont_groups'
)
plot_long_df_pca_2 <- plot_long_df_pca %>%
filter(!grepl(paste(exclude_strings_pca, collapse="|"), cols_compared)) %>%
filter(!grepl('either', cols_compared)) # comparison of either video
table(plot_long_df_pca_2$cols_compared)
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
# proportion
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
ggsave(file.path(output_dir, 'barcharts_proportion_3_wpc1.png'),
bg = 'white', height = 5, width = 5)
# make new columns
# only comparing stride time categorical and pixel categorical to T25FW categorical
# same for continuou
# don't need to specificy categorical or continuous on plot
plot_long_df_pca_2 <- plot_long_df_pca_2 %>%
mutate(video_metric_simple = ifelse(grepl('Pixel Proxy', video_metric),
'Pixel Proxy',
ifelse(grepl('Stride Time', video_metric),
'Stride Time',
ifelse(grepl('Either', video_metric),
'Either', 'Other'))))
plot_long_df_2$video_metric_simple = factor(plot_long_df_2$video_metric_simple,
levels = c('Pixel Proxy',
'Stride Time',
'PC1'))
plot_long_df_pca_2 <- plot_long_df_pca_2 %>%
mutate(video_metric_simple = ifelse(grepl('Pixel Proxy', video_metric),
'Pixel Proxy',
ifelse(grepl('Stride Time', video_metric),
'Stride Time',
ifelse(grepl('Either', video_metric),
'Either', 'Other'))))
plot_long_df_pca_2$video_metric_simple = factor(plot_long_df_pca_2$video_metric_simple,
levels = c('Pixel Proxy',
'Stride Time',
'PC1'))
print(table(plot_long_df_pca_2$clinical_outcome, plot_long_df_pca_2$video_metric)) # confirm
# factor clinical outcome variable - control order of facet_wrap
plot_long_df_pca_2$clinical_outcome <- factor(plot_long_df_pca_2$clinical_outcome,
levels = c('T25FW Continuous',
'T25FW Categorical',
'EDSS Ordinal',
'EDSS Categorical'))
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
# proportion
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
ggsave(file.path(output_dir, 'barcharts_proportion_3_wpc1.png'),
bg = 'white', height = 5, width = 5)
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
# proportion
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric_simple, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
# make new columns
# only comparing stride time categorical and pixel categorical to T25FW categorical
# same for continuou
# don't need to specificy categorical or continuous on plot
plot_long_df_pca_2 <- plot_long_df_pca_2 %>%
mutate(video_metric_simple = ifelse(grepl('Pixel Proxy', video_metric),
'Pixel Proxy',
ifelse(grepl('Stride Time', video_metric),
'Stride Time',
ifelse(grepl('Either', video_metric),
'Either', 'Other'))))
plot_long_df_pca_2$video_metric_simple = factor(plot_long_df_pca_2$video_metric_simple,
levels = c('Pixel Proxy',
'Stride Time',
'PC1'))
print(table(plot_long_df_pca_2$clinical_outcome, plot_long_df_pca_2$video_metric)) # confirm
# factor clinical outcome variable - control order of facet_wrap
plot_long_df_pca_2$clinical_outcome <- factor(plot_long_df_pca_2$clinical_outcome,
levels = c('T25FW Continuous',
'T25FW Categorical',
'EDSS Ordinal',
'EDSS Categorical'))
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
# proportion
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric_simple, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric_simple, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric_simple) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
plot_long_df_pca_2 <- plot_long_df_pca_2 %>%
mutate(video_metric_simple = ifelse(grepl('Pixel Proxy', video_metric),
'Pixel Proxy',
ifelse(grepl('Stride Time', video_metric),
'Stride Time',
ifelse(grepl('PC1', video_metric),
'PC1', 'Other'))))
plot_long_df_pca_2$video_metric_simple = factor(plot_long_df_pca_2$video_metric_simple,
levels = c('Pixel Proxy',
'Stride Time',
'PC1'))
print(table(plot_long_df_pca_2$clinical_outcome, plot_long_df_pca_2$video_metric)) # confirm
# factor clinical outcome variable - control order of facet_wrap
plot_long_df_pca_2$clinical_outcome <- factor(plot_long_df_pca_2$clinical_outcome,
levels = c('T25FW Continuous',
'T25FW Categorical',
'EDSS Ordinal',
'EDSS Categorical'))
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric_simple, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric_simple) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
table(plot_long_df_pca_prop$video_metric_simple)
# proportion
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric_simple, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
ggsave(file.path(output_dir, 'barcharts_proportion_3_wpc1.png'),
bg = 'white', height = 5, width = 5)
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric_simple) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
table(plot_long_df_pca_prop$video_metric_simple)
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
table(plot_long_df_pca_prop$video_metric)
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
# proportion
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric_simple, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
# make new columns
# only comparing stride time categorical and pixel categorical to T25FW categorical
# same for continuou
# don't need to specificy categorical or continuous on plot
plot_long_df_pca_2 <- plot_long_df_pca_2 %>%
mutate(video_metric_simple = ifelse(grepl('Pixel Proxy', video_metric),
'Pixel Proxy',
ifelse(grepl('Stride Time', video_metric),
'Stride Time',
ifelse(grepl('PC1', video_metric),
'PC1', 'Other'))))
plot_long_df_pca_2$video_metric_simple = factor(plot_long_df_pca_2$video_metric_simple,
levels = c('Pixel Proxy',
'Stride Time',
'PC1'))
print(table(plot_long_df_pca_2$clinical_outcome, plot_long_df_pca_2$video_metric)) # confirm
# factor clinical outcome variable - control order of facet_wrap
plot_long_df_pca_2$clinical_outcome <- factor(plot_long_df_pca_2$clinical_outcome,
levels = c('T25FW Continuous',
'T25FW Categorical',
'EDSS Ordinal',
'EDSS Categorical'))
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric_simple, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric_simple) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
table(plot_long_df_pca_prop$video_metric)
# add proportion column to put text on plot
plot_long_df_pca_prop <- plot_long_df_pca_2 %>%
group_by(clinical_outcome, video_metric_simple, agreement_group) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(clinical_outcome, video_metric_simple) %>%
mutate(prop = n / sum(n),
label = scales::percent(prop, accuracy = 1))
table(plot_long_df_pca_prop$video_metric_simple)
# proportion
p <- ggplot(plot_long_df_pca_prop, aes(x = video_metric_simple, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
ggsave(file.path(output_dir, 'barcharts_proportion_3_wpc1.png'),
bg = 'white', height = 5, width = 5)
# temp - just PC1 results
plot_long_df_pca_prop_temp <- plot_long_df_pca_prop %>%
filter(video_metric_simple == 'PC1')
# proportion
p <- ggplot(plot_long_df_pca_prop_temp, aes(x = video_metric_simple, y = prop, fill = agreement_group)) +
geom_bar(stat = "identity", position = "fill", width = 0.5) +
geom_text(aes(label = ifelse(prop > 0.03, label, "")),  # Only label if > 5%
position = position_fill(vjust = 0.5),
size = 3.25) +
facet_wrap(~ clinical_outcome) +
scale_fill_brewer(name = "Worsened by:", palette = "Set2") +
labs(y = "Proportion", x = "") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = 'bold', hjust = 0.5),
axis.title = element_text(size = 9),
#axis.text = element_text(size = 9),
axis.text.x = element_text(size = 9, face = 'italic', angle = 90),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9),
legend.position = 'bottom',
legend.key.size = unit(0.5, "lines"))
p
ggsave(file.path(output_dir, 'barcharts_proportion_3_wpc1.png'),
bg = 'white', height = 5, width = 5)
